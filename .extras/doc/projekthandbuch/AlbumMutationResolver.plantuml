' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseGuards" as UseGuards
  hide UseGuards circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Mutation" as Mutation
  hide Mutation circle

  class "@Args" as Args
  hide Args circle
}

package security.auth {
  class "type Role = 'ADMIN' | 'MUSIKREDAKTEUR'" as Role
  hide Role circle

  class "@Roles" as Roles
  hide Roles circle

  Roles .right.> Role
}

package album #DDDDDD {
  package entity #FFFFFF {
    class Album <<entity>>
  }

  package service #FFFFFF {
    class AlbumWriteService << control >>
  }

  class "type AlbumDTO = Omit<Album, 'lieder' | 'aktualisiert' | 'erzeugt'" as AlbumDTO
  hide AlbumDTO circle

    interface IdInput {
        id: number
    }

  class AlbumMutationResolver << control >> << @Resolver() >> << @UseGuards() >> << @UseInterceptors() >> {
    + @Mutation() @Roles() async create(@Args() albumDTO: AlbumDTO): Promise<number>
  }

  AlbumMutationResolver o-down-> "1" AlbumWriteService : service

  AlbumMutationResolver ..> Album
  AlbumMutationResolver ..> AlbumDTO
  AlbumMutationResolver ..> IdInput
  AlbumDTO .up.> Album
  AlbumMutationResolver ..> Promise
  AlbumMutationResolver ..> Resolver

  AlbumMutationResolver .up.> Roles
  AlbumMutationResolver .up.> Role

  AlbumDTO .[hidden].> Promise
  AlbumDTO .[hidden].> Resolver
}

hide empty members

footer Gruppe 4

@enduml
