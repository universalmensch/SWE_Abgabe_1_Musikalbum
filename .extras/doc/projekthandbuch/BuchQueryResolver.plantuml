' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Query" as Query
  hide Query circle

  class "@Args" as Args
  hide Args circle

  Resolver .left[hidden].> Promise
}

package buch {
  package entity {
    class Buch <<entity>>
  }

  package service {
    class BuchReadService << control >>
  }

  package graphql #DDDDDD {
    class "type BuchDTO = Omit<Buch, 'abbildungen' | 'aktualisiert' | 'erzeugt'" as BuchDTO
    hide BuchDTO circle

    interface IdInput {
        id: number
    }

    class BuchQueryResolver << control >> << @Resolver() >> << @UseInterceptors() >> {
      + @Query() async buch(@Args() id: IdInput): Promise<BuchDTO>
      + @Query() async buecher(@Args() titel: string | undefined): Promise<BuchDTO[]>
    }

    BuchQueryResolver o-up-> "1" BuchReadService : service
    BuchQueryResolver ..> BuchDTO
    BuchQueryResolver ..> IdInput
    BuchDTO ..> Buch
    BuchQueryResolver ..> Resolver

    BuchQueryResolver ..> Promise

    BuchDTO .[hidden].> Buch
    Buch .[hidden].> Promise
    BuchReadService .[hidden].> Promise
    Buch .[hidden].> Resolver
    BuchReadService .[hidden].> Resolver
  }
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
